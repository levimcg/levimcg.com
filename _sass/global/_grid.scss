/*-----------------------------------------------
    Underwear CSS
    _underwear.scss
    
    A simple grid system for basic layout
-----------------------------------------------*/

// *** Grid settings  ***
$grid-max-width: 1200px;
$grid-max-giant: 100%;
$grid-gutters: 1em;

.container {
    max-width: $grid-max-width;
    width: 94%;
    margin: 0 auto;

    &:after {
        content: "";
        display: block;
        clear: both;
    }

    &:before {
        content: "";
        display: block;
        clear: both;
    }
}

.unit {
    padding-left: $grid-gutters;
    padding-right: $grid-gutters;
    padding-top: $grid-gutters;
    padding-bottom: $grid-gutters;
    float: left;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    &:after {
        content: "";
        display: block;
        clear: both;
    }
}

.unit--short {
    padding-top: .5em;
    padding-bottom: .5em;
}

.container.kill-vertical .unit {
    padding-top: 0;
    padding-bottom: 0;
}
/* Grid nesting */

.unit > .container .unit {
    padding-top: 0;
    padding-bottom: 0;

    &:first-child {
        padding-left: 0;
    }

    &:last-child {
        padding-right: 0;
    }
}

.centered {
    margin: 0 auto;
    float: none !important;
}

.last {
    float: right;
}

.whole {
    width: 100%;
}

.half {
    width: 50%;
}

.one-third {
    width: 33.33333%;
}

.two-thirds {
    width: 66.666666666667%;
}

.one-fourth {
    width: 25%;
}

.three-fourths {
    width: 75%;
}

.one-fifth {
    width: 20%;
}

.two-fifths {
    width: 40%;
}

.three-fifths {
    width: 60%;
}

.four-fifths {
    width: 80%;
}
/* Push and pull classes */

.push {
    float: right;
}

.pull {
    float: left;
}

/* List grid */

ul.list-grid-fourths {
    display: block;
    list-style-type: none;
    margin: $grid-gutters * -1;
    padding: 0;

    &:after {
        content: "";
        display: block;
        clear: both;
    }

    li {
        display: block;
        float: left;
        width: 25%;
        padding: $grid-gutters;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
}

ul.list-grid-thirds {
    display: block;
    list-style-type: none;
    margin: $grid-gutters * -1;
    padding: 0;

    &:after {
        content: "";
        display: block;
        clear: both;
    }

    li {
        display: block;
        float: left;
        width: 33.333333333333%;
        padding: $grid-gutters;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
}

ul.list-grid-half {
    display: block;
    list-style-type: none;
    margin: $grid-gutters * -1;
    padding: 0;

    &:after {
        content: "";
        display: block;
        clear: both;
    }

    li {
        display: block;
        float: left;
        width: 50%;
        padding: $grid-gutters;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
}

@media screen and (max-width: 768px) {
    // Stack columns and decreas outer gutters for mobile
    .unit {
        float: none;
        padding-top: $grid-gutters / 2;
        padding-bottom: $grid-gutters / 2;
    }

    // Kill top padding on first nested unit to keep vertical spacing consistent
    .unit .container .unit:first-child {
        padding-top: 0;
    }

    /*
        May have fixed some of the grid nesting issues here?
        Needs more testing.
    */
    .unit > .container .unit {
        padding-top: $grid-gutters / 2;
        padding-bottom: $grid-gutters / 2;
        padding-left: 0;
        padding-right: 0;

        &:first-child {
            padding-top: 0;
            padding-right: 0;
        }

        &:last-child {
            padding-bottom: 0;
            padding-left: 0;
        }
    }

    /* Gets rid of left and right padding on grid units */
    .container--collapse {
        
        .unit {
            padding: $grid-gutters 0;
        }
    }
    
    /* Small grid - This will keep the proportions of the grid even on small devices */
    .container.small-grid .unit.half {
        width: 50%;
        float: left;
    }

    .container.small-grid .unit.one-third {
        width: 33.333333333333%;
        float: left;
    }

    .container.small-grid .unit.two-thirds {
        width: 66.666666666667%;
        float: left;
    }

    .container.small-grid .unit.one-fourth {
        width: 25%;
        float: left;
    }
    .container.small-grid .unit.three-fourths {
        width: 75%;
        float: left;
    }

    .container.small-grid .unit.one-fifth {
        width: 20%;
        float: left;
    }

    .container.small-grid .unit.two-fifths {
        width: 40%;
        float: left;
    }

    .container.small-grid .unit.three-fifths {
        width: 60%;
        float: left;
    }

    .container.small-grid .unit.four-fifths {
        width: 80%;
        float: left;
    }

    .whole,
    .half,
    .one-third,
    .two-thirds,
    .one-fourth,
    .three-fourths,
    .one-fifth,
    .two-fifths,
    .three-fifths,
    .four-fifths {
        width: 100% !important;
    }

    .push,
    .pull {
        float: none;
    }

    ul.list-grid-fourths,
    ul.list-grid-thirds,
    ul.list-grid-half {

        li {
            width: 100%;
            float: none;
        }

    }
}