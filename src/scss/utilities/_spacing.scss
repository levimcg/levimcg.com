/* stylelint-disable */

// Spacing direction values
// NOTE: using "-bottom" will break the orginal version of the bottom utility classes
// That used "-btm" for class names. The documentation needs to be updated to reflect
// This change.
$spacing-directions: (
  null,
  -top,
  -right,
  -bottom,
  -left
);




// Spacing size values
// NOTE you can reference these sizes in core/_variables.scss

$spacing-sizes: (
  // -xxs: $xxs,
  // -xs: $xs,
  // -sm: $sm,
  // -md: $md,
  // -lg: $lg,
  // -xl: $xl,
  // -xxl: $xxl
  -1: $sp-1,
  -2: $sp-2,
  -3: $sp-3,
  -4: $sp-4,
  -5: $sp-5,
  -6: $sp-6,
  -7: $sp-7,
  -8: $sp-8,
  -9: $sp-9,
  -10: $sp-10,
  -11: $sp-11,
  -12: $sp-12,
  -13: $sp-13,
  -14: $sp-14,
  -15: $sp-15
);




// Super gnarly loop here, but it save sooo much time

// Based on this great example by Harry Roberts:
// https://github.com/NHSLeadership/nightingale/blob/develop/utilities/_utilities.spacing.scss#L48

@each $direction in $spacing-directions {

  @each $size, $value in $spacing-sizes {
    // NOTE: We use !important here because we want these utilities to always
    // produced the same result.

    // If the direction is "null", add margin to all directions.
    @if $direction == null {

      .m-all#{$size} {
          margin: $value !important;
      }

      .p-all#{$size} {
          padding: $value !important;
      }

    // Otherwise create individual direction utilities.
    } @else {

      .m#{$direction}#{$size} {
          margin#{$direction}: $value !important;
      }

      .p#{$direction}#{$size} {
          padding#{$direction}: $value !important;
      }

    }

  } // End $spacing-sizes loop

} // End $spacing-directions loop



// Builds responsive spacing classes

@each $bp-name, $bp-value in $breakpoints {

  @include mq($bp-value) {

    @each $direction in $spacing-directions {

      @each $size, $value in $spacing-sizes {
        // NOTE: We use !important here because we want these utilities to always
        // produced the same result.

        // If the direction is "null", add margin to all directions.
        @if $direction == null {

            .m-all#{$size}-#{$bp-name}-up {
                margin: $value !important;
            }

            .p-all#{$size}-#{$bp-name}-up {
                padding: $value !important;
            }

            // Otherwise create individual direction utilities.
        } @else {

          .m#{$direction}#{$size}-#{$bp-name}-up {
              margin#{$direction}: $value !important;
          }

          .p#{$direction}#{$size}-#{$bp-name}-up {
              padding#{$direction}: $value !important;
          }

        }

      } // End $spacing-sizes loop

    } // End $spacing-directions loop

  }

}




// This loop creates classes that remove margin and padding from
// and element.

@each $direction in $spacing-directions {

  @if $direction == null {

    .m-all-remove {
        margin: 0 !important;
    }

    .p-all-remove {
        padding: 0 !important;
    }

  } @else {

    .m#{$direction}-remove {
        margin#{$direction}: 0 !important;
    }

    .p#{$direction}-remove {
        padding#{$direction}: 0 !important;
    }

  }

} // End remove loop

/* stylelint-enable */
